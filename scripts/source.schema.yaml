####
#### Use kwalify and this schema to validate the config files.
#### Example usage:
####    kwalify -E -m ./scripts/source.schema.yaml
####    kwalify -f ./scripts/source.schema.yaml ./data-sources/bgee.yaml
####
type: map
mapping:
  ## Unique ID of the resource, biodbcore or NAR preferred.
  ## But any unique internal ID is usable.
  "id":
    type: str
    required: yes
  ## Short label for the resource.
  "source":
    type: str
    required: yes
  ## (Optional) URL for the resource.
  "source-link":
    type: str
    required: no
  ## Whether or not annotation is complete on this resource.
  ## Current allowable entries are: "complete", "incomplete", and "nonpublic".
  "status":
    type: str
    required: yes
  ## Full description of the resource.
  "description":
    type: str
    required: yes
  ## Are of research for the resource.
  "data-field":
    type: str
    required: yes
  ## Type of data the resource contains.
  "data-type":
    type: str
    required: yes
  ## (Optional) tags to describe the resource and its data.
  "data-categories":
    type: seq
    sequence:
      - type: str
    required: no
  ## (Optional) links to resource data.
  "data-access":
    type: seq
    sequence:
      - type: map
        mapping:
          ## (Optional) How the data access point should be differentiated
          ## from others at a resource. E.g. "expression data" or
          ## "HPO ontology". Very very optional as this can be a rat's nest.
          "label":
            type: str
            required: no
          ## The type of data access. Likely: "download" or "API".
          "type":
            type: str
            required: yes
          ## The location of the data access. Do /NOT/ worry about getting the
          ## perfect and "real" location here; a top-level or informational
          ## location is fine.
          "location":
            type: str
            required: yes
    required: no
  ## The license that is used.
  ## Should try and use SPDX where we can: https://spdx.org/licenses/
  ## or: "unknown", "public domain", "all right reserved", or "custom".
  "license":
    type: str
    required: yes
  ## The type of license that is being used. This will be to define
  ## compatible data pools in the future, only the grossest terms now.
  ## If you do not know, enter "TODO".
  ## I.e. "unknown", "copyleft", "permissive", "public domain",
  ## "copyright", "restrictive", or "closed pool".
  "license-type":
    type: str
    required: yes
  ## (Optional) link to the resource license.
  "license-link":
    type: str
    required: no
  ## (Optional) Further commentary on the license, possibly including things
  ## like locations of additional licenses.
  "license-commentary":
    type: seq
    sequence:
      - type: str
    required: no
  ## (Optional) structured issues with the license.
  "license-issues":
    type: seq
    sequence:
      - type: map
        mapping:
          ## The criteria violated. E.g. "A.1.1", "D.2".
          "criteria":
            type: str
            required: yes
          ## How the criteria was violated.
          "comment":
            type: str
            required: no
    required: no
  ## (Optional) resource contact information, link or email
  ## or whatever is public.
  "contacts":
    type: seq
    sequence:
      - type: str
    required: no
  ## (Optional) semi-structured list of supporting grants
  "grants":
    type: seq
    sequence:
      - type: map
        mapping:
          ## A string representation of the grant.
          "label":
            type: str
            required: yes
          ## The URL for grant information.
          "url":
            type: str
            required: no
    required: no
  ## The final grade for the resource, as justified by the violations.
  "grade":
    type: number
    required: yes
